{"ast":null,"code":"import Axios from 'axios';\nimport { baseURL, RESPONSE_CODES } from '../constants/API';\nimport Utility from '../services/UtilityService';\nimport { omitBy, isNil } from 'lodash';\nimport { message } from 'antd';\nconst axios = Axios.create({\n  baseURL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  responseType: 'json'\n});\naxios.interceptors.request.use(config => {\n  if (!!Utility.domain) {\n    config.headers['X-WIDGET-HOST'] = `${Utility.domain}`;\n  }\n\n  if (!!Utility.token) {\n    config.headers['Authorization'] = `Bearer ${Utility.token}`;\n  }\n\n  return config;\n}, err => Promise.reject(err));\n\nclass HTTPService {\n  static post({\n    url,\n    headers = {},\n    data = {}\n  }) {\n    data = omitBy(data, isNil);\n    return axios.post(url, data, {\n      headers: { //'X-Access-Token': token,\n        ...headers\n      }\n    }).then(HTTPService.checkAuthorization);\n  }\n\n  static put({\n    url,\n    headers = {},\n    data = {}\n  }) {\n    data = omitBy(data, isNil);\n    return axios.put(url, data, {\n      headers: { //'X-Access-Token': token,\n        ...headers\n      }\n    }).then(HTTPService.checkAuthorization);\n  }\n\n  static get({\n    url,\n    headers = {},\n    params = {},\n    data = {}\n  }) {\n    return axios.get(url, {\n      headers: { //'X-Access-Token': token,\n        ...headers\n      },\n      params: { ...params\n      },\n      data: data\n    }).then(HTTPService.checkAuthorization);\n  }\n\n  static delete({\n    url,\n    headers = {}\n  }) {\n    return axios.delete(url, {\n      headers: { //'X-Access-Token': token,\n        ...headers\n      }\n    }).then(HTTPService.checkAuthorization);\n  }\n\n  static checkAuthorization({\n    data = {}\n  }) {\n    if (data.code === RESPONSE_CODES.SUCCESS) {// API success nothing to do\n    } else if (data.code === RESPONSE_CODES.UNAUTHORIZED) {\n      message.error(data.message);\n    }\n    /* else {\n       console.log(\"Here\")\n       message.error(data.message || 'Error occured.');\n    }*/\n\n\n    return data;\n  }\n\n}\n\nexport default HTTPService;","map":{"version":3,"sources":["/home/doboz/my_workspace/giftwrap/giftwrap-child/src/api/index.js"],"names":["Axios","baseURL","RESPONSE_CODES","Utility","omitBy","isNil","message","axios","create","headers","responseType","interceptors","request","use","config","domain","token","err","Promise","reject","HTTPService","post","url","data","then","checkAuthorization","put","get","params","delete","code","SUCCESS","UNAUTHORIZED","error"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport { baseURL, RESPONSE_CODES } from '../constants/API';\nimport Utility from '../services/UtilityService';\n\nimport { omitBy, isNil } from 'lodash';\nimport { message } from 'antd';\n\nconst axios = Axios.create({\n    baseURL,\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n    },\n    responseType: 'json'\n});\n\naxios.interceptors.request.use((config) => {\n\n    if (!!Utility.domain) { config.headers['X-WIDGET-HOST'] = `${Utility.domain}`; }\n    if (!!Utility.token) { config.headers['Authorization'] = `Bearer ${Utility.token}`; }\n\n    return config;\n},(err) => Promise.reject(err));\n\nclass HTTPService {\n    static post({ url, headers = {}, data = {} }) {\n        data = omitBy(data, isNil);\n        return axios.post(url, data, {\n            headers: {\n                //'X-Access-Token': token,\n                ...headers\n            }\n        })\n            .then(HTTPService.checkAuthorization);\n    }\n\n    static put({ url, headers = {}, data = {} }) {\n        data = omitBy(data, isNil);\n        return axios.put(url, data, {\n            headers: {\n                //'X-Access-Token': token,\n                ...headers\n            }\n        })\n            .then(HTTPService.checkAuthorization);\n    }\n\n    static get({ url, headers = {}, params = {}, data = {} }) {\n        return axios.get(url, {\n            headers: {\n                //'X-Access-Token': token,\n                ...headers\n            },\n            params: {\n                ...params\n            },\n            data: data\n        })\n            .then(HTTPService.checkAuthorization);\n    }\n\n    static delete({ url, headers = {} }) {\n        return axios.delete(url, {\n            headers: {\n                //'X-Access-Token': token,\n                ...headers\n            }\n        })\n            .then(HTTPService.checkAuthorization);\n    }\n\n    static checkAuthorization({ data = {} }) {\n        if (data.code === RESPONSE_CODES.SUCCESS) {\n            // API success nothing to do\n        } else if (data.code === RESPONSE_CODES.UNAUTHORIZED) {\n            message.error(data.message);\n        }/* else {\n            console.log(\"Here\")\n            message.error(data.message || 'Error occured.');\n        }*/\n        return data;\n    }\n}\n\nexport default HTTPService;"]},"metadata":{},"sourceType":"module"}